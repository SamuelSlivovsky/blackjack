int game(DATA_K dataK) {

    char chr = 'n';
    int volba = 1;
    while (true) {
        // menu();
        if (chr != 'y') {
            printf("vasa volba: ");
            scanf("%d", &volba);
        }

        if (volba == 1) {
            //krupier
            int balicek[52] = {0};
            int aktualnaKarta = 4;
            char harabin = ' ';
            //hrac A
            int kartyA[5] = {0};
            int pocetKarietA = 2;
            int skoreA = 0;

            //hrac B
            int kartyB[5] = {0};
            int pocetKarietB = 2;
            int skoreB = 0;

            //naplnenie struktur

            DATA_H dataH1 = {kartyA, &pocetKarietA, &skoreA};
            DATA_H dataH2 = {kartyB, &pocetKarietB, &skoreB};

            //spustenie hry
            hra(dataK, dataH1, dataH2);

            //naplnenie historie
            /* history.pocetHier++;
             char novePole[history.pocetHier];
             for (int i = 0; i < history.pocetHier; ++i) {
                 novePole[i] = history.historia[i];

             }
             //novePole[history.pocetHier] = '\0';
             history.historia = novePole;
             history.historia[history.pocetHier] = *(dataK.harabin);
 */
            printf("\n");
            printf("Chcete hrat znova?\n");
            printf(" (y - ano, n - nie)\n");
            printf("vasa volba: ");
            scanf(" %c", &chr);
            printf("\n");

        } else if (volba == 2) {
            printf("...coskoro...\n");

            // printf("%c\n", *history.historia);


        } else if (volba == 3) {
            return 0;
        } else {
            printf("Zadajte iba moznosti z MENU.\n");
        }
    }
}

int writeIntMsg(DATA_K dataK, int msg, int client) {
    char str[2];
    sprintf(str, "%d", msg);
    int n = write(client, str, strlen(str) + 1);
    if (n < 0) {
        perror("Error writing to socket");
        return 5;
    } else {
        printf("[INFO] - Succesfully wrote to socket\n");
        return 0;
    }
}

// potiahne si 2 karty na zaciatok
//    readMsg(*dataH);
//    writeMsg(*dataH, msg);
//    dataH->karty[0] = dataH->buffer[0];
//    readMsg(*dataH);
//    writeMsg(*dataH, msg);
//    dataH->karty[1] = dataH->buffer[0];
//    readMsg(*dataH);
//
//    ukazKarty(dataH->karty);
//
//    *(dataH->pocetKariet) = 2;
//    int pocTahov = 2;
//    printf("\nsom pred while\n");
//    while (pocTahov != 5) {
//        printf("\nsom na zaciatku while\n");
//        pocTahov++;
//
//        if (dataH->buffer[0] != 'i') {
//            printf("\nCakajte dokial druhy hrac ukonci svoje kolo\n");
//        }
//
//        // cakam kym budem na tahu
//        while (dataH->buffer[0] != 'i') {
////            if (readMsg(*dataH) == 0) {
////                return 0;
////            }
//            readMsg(*dataH);
//        }
//
//        printf("\nidem citat buffer\n");
//        if (dataH->buffer[0] == 'i') {
//            hracTah();
//            ukazKarty(dataH->karty);
//            vypisKarty(dataH);
//            int volba = 0;
//            while (volba != 1 && volba != 2 && volba != 3) {
//                printf("Vasa volba: ");
//                bzero(dataH->buffer, 256);
//                fgets(dataH->buffer, 255, stdin);
//                volba = atoi(&(dataH->buffer[0]));
//            }
//
//            // poslem svoju volbu
//            writeMsg(*dataH, dataH->buffer);
//            // precitam si odpoved
//            readMsg(*dataH);
//
//            if (volba == 1) {
//                int poc = *(dataH->pocetKariet);
//                dataH->karty[poc] = dataH->buffer[0];
//                (*(dataH->pocetKariet))++;
//                printf("Potiahol si %c\n", dataH->buffer[0]);
//                ukazKarty(dataH->karty);
//                vypisKarty(dataH);
//            }
//            if (volba == 2) {
//                pocTahov = 5;
//            }
//            if (volba == 3) {
//                pocTahov = 5;
//            }
//
//            printf("\nkoniec tahu\n");
//        }
//
//    }
//
//    // precita si vysledky hry
//    readMsg(*dataH);
//    printf("\n%s\n", dataH->buffer);
//    writeMsg(*dataH, " ");
//
//    // precita si karty protivnika
//    readMsg(*dataH);
//    printf("\nKarty protihraca:\n");
//    ukazKarty(dataH->buffer);
//
//    char volba = ' ';
//    while (volba != 'y' && volba != 'n') {
//        restart();
//        printf("Vasa volba: ");
//        bzero(dataH->buffer, 256);
//        fgets(dataH->buffer, 255, stdin);
//        volba = dataH->buffer[0];
//
//
//    }
//
//        writeMsg(*dataH, dataH->buffer);
//    //readMsg(dataH)
//    if (volba == 'y') {
//        hra(dataH);
//    }